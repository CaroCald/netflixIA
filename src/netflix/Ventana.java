/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package netflix;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import weka.classifiers.Classifier;
import weka.classifiers.Evaluation;
import weka.classifiers.evaluation.Prediction;
import weka.classifiers.functions.MultilayerPerceptron;
import weka.classifiers.misc.SerializedClassifier;
import weka.core.Debug;
import weka.core.Instances;
import weka.core.Utils;

/**
 *
 * @author Carolina
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    String region,  dispositivo,cantidadPagos, edad;
    int horaMes;
    String[] datos = new String[8];
    String [] regiones = {"NA","CA","SA"};
    DefaultTableModel modelo = new DefaultTableModel();
    public Ventana() {
        initComponents();
        setTitle("Prediccion de Servicio Netflix");        
        modelo.addColumn("Horas Al Mes");
        modelo.addColumn("Cantidad de Pagos");
        modelo.addColumn("Region");
        modelo.addColumn("Edad");
        modelo.addColumn("Dispositivo");
        jTable1.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Numero de horas al dia");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Cantidad de Pagos en un año");

        jLabel3.setText("Region");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Centro America", "Sur America", "Norte America" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Edad:");

        jLabel5.setText("Dispositivo");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TV", "SMARTPHONE", "TABLET", "CONSOLAS", "PC" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Predecir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Añadir Nuevo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Horas al Mes", "Cantidad de Pagos", "Region", "Edad", "Dispositivo"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 230, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(71, 71, 71))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        //String parametros="-L 0.3 -M 0.2 -N 200 -V 0 -S 0 -E 20 -H 100";
        //entrenamiento(parametros);
          //testeo();
     
        prediccion();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        escribirArchivo();
        horaMes=(Integer.parseInt(jTextField1.getText()))*30;
        cantidadPagos=jTextField2.getText();
        region=(String)jComboBox1.getSelectedItem();
        edad=jTextField4.getText();
        dispositivo=(String)jComboBox2.getSelectedItem();
                datos[0] = String.valueOf(horaMes);
                datos[1] = cantidadPagos;
                datos[2] =region;
                datos[3] = edad;
                datos[4] = dispositivo;
                modelo.addRow(datos);
                limpiar();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    public void escribirArchivo(){
        horaMes=(Integer.parseInt(jTextField1.getText()))*30;
        cantidadPagos=jTextField2.getText();
     
        if(jComboBox1.getSelectedIndex()==0)
        {
            region="CA";
        }
        if(jComboBox1.getSelectedIndex()==1)
        {
            region="SA";
        }
        if(jComboBox1.getSelectedIndex()==2)
        {
            region="NA";
        }
        edad=jTextField4.getText();
        dispositivo=(String)jComboBox2.getSelectedItem();
       
                 File archivo = new File("src/archivos_arff/netflixPrediccion.arff");
        if(archivo.exists()) {
             try {
              FileWriter escribir = new FileWriter(archivo, true);
              escribir.write(
            ""+String.valueOf(horaMes)+", "+cantidadPagos+", '"+region+"', "+edad+", "+dispositivo+", ? \n"); 
              escribir.close();
             }       catch (IOException ex) { 
                         Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                     } 
           
        } 
    }
    public void testeo(){
		
		try {
			FileReader testReader = new FileReader("src/archivos_arff/netflixTest2.arff");
			Instances test = new Instances(testReader);
			test.setClassIndex(test.numAttributes()-1);
			
			Evaluation evalTest=new Evaluation(test);
			
			//fijar modelo de red neuronal serializado
			
			SerializedClassifier classifier = new SerializedClassifier();
			classifier.setModelFile(new File ("src/red/RedNeuronalEntrenada.train"));
			Classifier mlp = classifier.getCurrentModel(); //obtengo el modelo y lo igualo 
			
			evalTest.evaluateModel(mlp, test);
			jTextArea1.append(evalTest.toSummaryString("Resumen", false));
			jTextArea1.append(evalTest.toMatrixString("Matrix Con."));
			
			testReader.close();
			
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(redNeuronal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(redNeuronal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(redNeuronal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    public void entrenamiento(String parametros){
        
        try {
            FileReader trainreader = new FileReader("src/archivos_arff/netflixTrain2.arff");
            Instances train = new Instances(trainreader);
			train.setClassIndex(train.numAttributes()-1);
             MultilayerPerceptron mlp = new MultilayerPerceptron();
			mlp.setOptions(Utils.splitOptions(parametros));
			mlp.buildClassifier(train); //construir clasificador   
                        
            Debug.saveToFile("src/red/RedNeuronalEntrenada.train", mlp);
			
			//evaluar el entrenamiento
			Evaluation evaluarTrain = new Evaluation(train);
			evaluarTrain.evaluateModel(mlp, train);
			jTextArea1.append(evaluarTrain.toSummaryString("Resumen", false));
			jTextArea1.append(evaluarTrain.toMatrixString("Matrix de confusion"));
			
			trainreader.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(redNeuronal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(redNeuronal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(redNeuronal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    public void limpiar(){
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField4.setText("");
        jComboBox1.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(0);
    }
    public void imprimir(){
        horaMes=(Integer.parseInt(jTextField1.getText()))*30;
        cantidadPagos=jTextField2.getText();
        region=(String)jComboBox1.getSelectedItem();
        edad=jTextField4.getText();
        dispositivo=(String)jComboBox2.getSelectedItem();
        jTextArea1.append("Horas por Mes: "+String.valueOf(horaMes)+"\nCantidad de Pagos: "+
        cantidadPagos+"\nRegion: "+region+"\nEdad: "+edad+"\nDispositivo: ");
        jTextArea1.append("-------------------------------------------------------------");
    }
     public void prediccion(){
		FileReader predReader;
		try {
			predReader = new FileReader("src/archivos_arff/netflixPrediccion.arff");
			Instances pred = new Instances(predReader);
			pred.setClassIndex(pred.numAttributes()-1);
			
			Evaluation evalPred=new Evaluation(pred);
			
			SerializedClassifier classifier = new SerializedClassifier();
			classifier.setModelFile(new File ("src/red/RedNeuronalEntrenada.train"));
			
			Classifier mlp = classifier.getCurrentModel(); //obtengo el modelo y lo igualo 
			evalPred.evaluateModel(mlp, pred);
			
			ArrayList<Prediction> predicciones = evalPred.predictions();
			for (int i = 0; i < predicciones.size(); i++) {
				Prediction p = predicciones.get(i);
                                //jTextArea1.append(String.valueOf(p.predicted()+"\n"));
                                if(String.valueOf(p.predicted()).equals("1.0"))
                                {
                                    jTextArea1.append("Contratara el servicio \n");                                     
                                }
                                if(String.valueOf(p.predicted()).equals("0.0"))
                                {
                                    jTextArea1.append("No contratara el servicio \n");
                                }
			}

            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(redNeuronal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(redNeuronal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(redNeuronal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
